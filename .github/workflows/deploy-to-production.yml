name: CI - Deploy master to production

on: workflow_dispatch

jobs:
  build:

    name: Deploy master to production
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@master

      - name: Install the CF CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf7-cli

      - name: Authenticate as staging with CloudFoundry
        env:
          CF_USERNAME: ${{ secrets.DEPLOY_STAGING_USERNAME }}
          CF_PASSWORD: ${{ secrets.DEPLOY_STAGING_PASSWORD }}
          CF_ORG: global-digital-marketplace
          CF_SPACE: dbg-staging
        run: |
          cf api https://api.london.cloud.service.gov.uk
          cf auth
          cf target -o ${CF_ORG} -s ${CF_SPACE}

      - name: Check commit deployed to staging
        if: github.sha != $(cf ssh dbg-staging-app -c "cat app/commit_ref")
        run: echo "::set-env name=STAGING_COMMIT_REF::$(cf ssh dbg-staging-app -c "cat app/commit_ref")"

      - name: Compare staging commit with commit to be deployed (fail if this deployment is not on staging)
        if: ${{ github.sha != env.STAGING_COMMIT_REF }}
        run: |
          echo "Master is not deployed to staging. Deploy it there before production."
          exit 1

      - name: Authenticate as production with CloudFoundry
        env:
          CF_USERNAME: ${{ secrets.DEPLOY_PRODUCTION_USERNAME }}
          CF_PASSWORD: ${{ secrets.DEPLOY_PRODUCTION_PASSWORD }}
          CF_ORG: global-digital-marketplace
          CF_SPACE: dbg-production
        run: |
          cf api https://api.london.cloud.service.gov.uk
          cf auth
          cf target -o ${CF_ORG} -s ${CF_SPACE}

      - name: Deploy to production
        env:
          CF_MANIFEST: production
        run: |
          cf push -f manifest-${CF_MANIFEST}.yml --strategy rolling
